name: Deploy to Staging

on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Do not deploy in the main repository, only in user projects
    if: github.repository_owner != 'fastapi'
    runs-on:
      - self-hosted
      - staging
    env:
      ENVIRONMENT: staging
      DOMAIN: ${{ secrets.DOMAIN_STAGING }}
      STACK_NAME: ${{ secrets.STACK_NAME_STAGING }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAILS_FROM_EMAIL: ${{ secrets.EMAILS_FROM_EMAIL }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} --verbose build
      - run: docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} up -d
      - name: Get logs with different approaches
        if: failure()
        run: |
          echo "=== Method 1: docker-compose logs ==="
          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} logs prestart || echo "Method 1 failed"
          
          echo "=== Method 2: docker logs direct ==="
          CONTAINER_ID=$(docker ps -a --format "table {{.ID}}\t{{.Names}}" | grep prestart | awk '{print $1}' || echo "")
          if [ -n "$CONTAINER_ID" ]; then
              echo "Found container: $CONTAINER_ID"
              docker logs $CONTAINER_ID
          else
              echo "No prestart container found"
          fi
          
          echo "=== Method 3: All logs from project ==="
          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} logs
